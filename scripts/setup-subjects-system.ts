import { createClient } from "@supabase/supabase-js";
import dotenv from "dotenv";
import fs from "fs";
import path from "path";

dotenv.config();

const supabase = createClient(
  process.env.NEXT_PUBLIC_SUPABASE_URL!,
  process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY!
);

async function setupSubjectsSystem() {
  console.log("üìö SETUP - Syst√®me de mati√®res dans les cours");
  console.log("=".repeat(60));

  try {
    // Lire le fichier SQL
    const sqlPath = path.join(process.cwd(), "scripts", "create-subjects-system.sql");
    const sqlContent = fs.readFileSync(sqlPath, "utf8");

    console.log("üìã Ex√©cution du script SQL...");
    console.log("");

    // Diviser le script en commandes individuelles
    const commands = sqlContent
      .split(";")
      .map(cmd => cmd.trim())
      .filter(cmd => cmd.length > 0 && !cmd.startsWith("--"));

    let successCount = 0;
    let errorCount = 0;

    for (const command of commands) {
      try {
        if (
          command.includes("CREATE TABLE") ||
          command.includes("CREATE INDEX") ||
          command.includes("CREATE POLICY")
        ) {
          console.log(`üîß Ex√©cution: ${command.substring(0, 50)}...`);

          const { error } = await supabase.rpc("exec_sql", {
            sql: command,
          });

          if (error) {
            console.log(`‚ö†Ô∏è  Erreur: ${error.message}`);
            errorCount++;
          } else {
            console.log("‚úÖ Succ√®s");
            successCount++;
          }
        } else if (command.includes("INSERT INTO")) {
          console.log(`üìù Insertion de donn√©es...`);

          // Pour les insertions, on va les traiter diff√©remment
          try {
            const { error } = await supabase.rpc("exec_sql", {
              sql: command,
            });

            if (error) {
              console.log(`‚ö†Ô∏è  Erreur d'insertion: ${error.message}`);
              errorCount++;
            } else {
              console.log("‚úÖ Donn√©es ins√©r√©es");
              successCount++;
            }
          } catch (err) {
            console.log(`‚ö†Ô∏è  Erreur d'insertion: ${err}`);
            errorCount++;
          }
        }
      } catch (err) {
        console.log(`‚ùå Erreur: ${err}`);
        errorCount++;
      }
    }

    console.log("");
    console.log("üìä R√©sum√©:");
    console.log(`   ‚úÖ ${successCount} commande(s) r√©ussie(s)`);
    console.log(`   ‚ùå ${errorCount} erreur(s)`);
    console.log("");

    if (errorCount === 0) {
      console.log("üéâ Syst√®me de mati√®res cr√©√© avec succ√®s !");
      console.log("");
      console.log("üìã Structure cr√©√©e :");
      console.log("   ‚Ä¢ subjects - Mati√®res dans les cours");
      console.log("   ‚Ä¢ evaluation_criteria - Crit√®res par mati√®re");
      console.log("   ‚Ä¢ evaluations - √âvaluations par mati√®re");
      console.log("   ‚Ä¢ grades - Notes par mati√®re et crit√®re");
      console.log("");
      console.log("üéØ Mati√®res par d√©faut :");
      console.log("   üìñ Arabe : Lecture, Grammaire, Expression orale, Religion");
      console.log("   üìñ Coran : R√©citation, Tajweed, M√©morisation, Compr√©hension");
      console.log("   üìñ √âveil : √âveil religieux, Activit√©s manuelles, Chants");
      console.log("");
      console.log("üîó Vous pouvez maintenant acc√©der √† la page /grades");
    } else {
      console.log("‚ö†Ô∏è  Certaines erreurs sont survenues. V√©rifiez les logs ci-dessus.");
    }
  } catch (error) {
    console.error("‚ùå Erreur g√©n√©rale:", error);
  }
}

// Fonction pour cr√©er les mati√®res manuellement
async function createSubjectsManually() {
  console.log("üîß Cr√©ation des mati√®res manuellement...");

  try {
    // 1. R√©cup√©rer les cours existants
    const { data: courses, error: coursesError } = await supabase
      .from("courses")
      .select("id, name, label")
      .eq("status", "active")
      .order("name");

    if (coursesError) {
      console.error("‚ùå Erreur lors de la r√©cup√©ration des cours:", coursesError);
      return;
    }

    console.log(`üìö ${courses?.length || 0} cours trouv√©(s)`);

    // 2. D√©finir les mati√®res par cours
    const subjectsByCourse: {
      [key: string]: Array<{
        name: string;
        description: string;
        color: string;
        order_index: number;
      }>;
    } = {
      "Arabe D√©butant": [
        {
          name: "Lecture",
          description: "Lecture et compr√©hension de textes",
          color: "#3B82F6",
          order_index: 1,
        },
        {
          name: "Grammaire",
          description: "R√®gles grammaticales de base",
          color: "#10B981",
          order_index: 2,
        },
        {
          name: "Expression orale",
          description: "Conversation et prononciation",
          color: "#F59E0B",
          order_index: 3,
        },
        { name: "Religion", description: "√âducation religieuse", color: "#8B5CF6", order_index: 4 },
      ],
      "Arabe √âl√©mentaire": [
        {
          name: "Lecture",
          description: "Lecture et compr√©hension de textes",
          color: "#3B82F6",
          order_index: 1,
        },
        {
          name: "Grammaire",
          description: "R√®gles grammaticales interm√©diaires",
          color: "#10B981",
          order_index: 2,
        },
        {
          name: "Expression orale",
          description: "Conversation et prononciation",
          color: "#F59E0B",
          order_index: 3,
        },
        { name: "Religion", description: "√âducation religieuse", color: "#8B5CF6", order_index: 4 },
      ],
      "Arabe Interm√©diaire": [
        {
          name: "Lecture",
          description: "Lecture et compr√©hension de textes",
          color: "#3B82F6",
          order_index: 1,
        },
        {
          name: "Grammaire",
          description: "R√®gles grammaticales avanc√©es",
          color: "#10B981",
          order_index: 2,
        },
        {
          name: "Expression orale",
          description: "Conversation et prononciation",
          color: "#F59E0B",
          order_index: 3,
        },
        { name: "Religion", description: "√âducation religieuse", color: "#8B5CF6", order_index: 4 },
      ],
      "Coran D√©butant": [
        {
          name: "R√©citation",
          description: "Apprentissage de la r√©citation",
          color: "#059669",
          order_index: 1,
        },
        {
          name: "Tajweed",
          description: "R√®gles de prononciation",
          color: "#DC2626",
          order_index: 2,
        },
        {
          name: "M√©morisation",
          description: "M√©morisation des versets",
          color: "#7C3AED",
          order_index: 3,
        },
        {
          name: "Compr√©hension",
          description: "Explication des versets",
          color: "#EA580C",
          order_index: 4,
        },
      ],
      "Coran Interm√©diaire": [
        {
          name: "R√©citation",
          description: "Perfectionnement de la r√©citation",
          color: "#059669",
          order_index: 1,
        },
        {
          name: "Tajweed",
          description: "R√®gles de prononciation avanc√©es",
          color: "#DC2626",
          order_index: 2,
        },
        {
          name: "M√©morisation",
          description: "M√©morisation des sourates",
          color: "#7C3AED",
          order_index: 3,
        },
        {
          name: "Compr√©hension",
          description: "Explication approfondie",
          color: "#EA580C",
          order_index: 4,
        },
      ],
      "Coran Avanc√©": [
        {
          name: "R√©citation",
          description: "Ma√Ætrise de la r√©citation",
          color: "#059669",
          order_index: 1,
        },
        {
          name: "Tajweed",
          description: "Ma√Ætrise des r√®gles de prononciation",
          color: "#DC2626",
          order_index: 2,
        },
        {
          name: "M√©morisation",
          description: "M√©morisation compl√®te",
          color: "#7C3AED",
          order_index: 3,
        },
        {
          name: "Compr√©hension",
          description: "Analyse approfondie",
          color: "#EA580C",
          order_index: 4,
        },
      ],
      "√âveil Islamique": [
        {
          name: "√âveil religieux",
          description: "D√©couverte de l'islam",
          color: "#059669",
          order_index: 1,
        },
        {
          name: "Activit√©s manuelles",
          description: "Cr√©ativit√© et expression",
          color: "#F59E0B",
          order_index: 2,
        },
        {
          name: "Chants et comptines",
          description: "Apprentissage par le chant",
          color: "#8B5CF6",
          order_index: 3,
        },
      ],
    };

    // 3. Cr√©er les mati√®res pour chaque cours
    for (const course of courses || []) {
      const courseName = course.label || course.name;
      const subjects = subjectsByCourse[courseName];

      if (subjects) {
        console.log(`üìö Cr√©ation des mati√®res pour ${courseName}...`);

        for (const subject of subjects) {
          const { error: insertError } = await supabase.from("subjects").upsert(
            {
              course_id: course.id,
              ...subject,
            },
            { onConflict: "course_id,name" }
          );

          if (insertError) {
            console.log(`‚ö†Ô∏è  Erreur pour la mati√®re "${subject.name}":`, insertError.message);
          } else {
            console.log(`‚úÖ Mati√®re "${subject.name}" ajout√©e`);
          }
        }
      }
    }

    console.log("");
    console.log("üéâ Mati√®res cr√©√©es avec succ√®s !");
    console.log("üìã Les crit√®res d'√©valuation seront cr√©√©s automatiquement.");
  } catch (error) {
    console.error("‚ùå Erreur lors de la cr√©ation des mati√®res:", error);
  }
}

// Fonction principale
async function main() {
  const args = process.argv.slice(2);
  const command = args[0];

  switch (command) {
    case "setup":
      await setupSubjectsSystem();
      break;
    case "create":
      await createSubjectsManually();
      break;
    default:
      console.log("Usage:");
      console.log("  npm run setup-subjects-system setup   - Configuration compl√®te");
      console.log("  npm run setup-subjects-system create  - Cr√©ation des mati√®res");
      break;
  }
}

main().catch(console.error);
